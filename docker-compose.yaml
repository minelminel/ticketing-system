## $ docker-compose up --build
## $ docker-compose down --remove-orphans
version: "2.1"
services:
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    image: ticketing-system-ui
    ports:
      - 3000:3000
    volumes:
      - "./ui:/src/" # enable hot reload
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    depends_on:
      - api
    environment:
      CHOKIDAR_USEPOLLING: "true"
      REACT_APP_ENV: "docker"
    networks:
      - default
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    image: ticketing-system-api
    command: python app.py run -h 0.0.0.0 --reload
    ports:
      - 5000:5000
    volumes:
      - "./api:/src/" # enable hot reload
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    environment:
      FLASK_ENV: "docker"
      # https://testdriven.io/blog/dockerizing-flask-with-postgres-gunicorn-and-nginx/
      SQL_HOST: "db"  # wait for services
      SQL_PORT: "5432"  # wait for services
    depends_on:
      - db
    networks:
      - default
  db:
    build:
      context: ./db
      dockerfile: Dockerfile.dev
    image: ticketing-system-db
    ports:
      - 5432:5432
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      # POSTGRES_DB: "default"
    networks:
      - default
  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: Dockerfile.dev
    image: ticketing-system-pgadmin
    ports:
      - 5050:5050
    depends_on:
      - db
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    volumes:
      - pgadmin_data:/var/lib/pgadmin/
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_LISTEN_PORT: "5050"
      # SCRIPT_NAME: "/pgadmin"  # same as X-Script-Name
    networks:
      - default
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile.dev
    image: ticketing-system-grafana
    ports:
      - 3001:3001
    depends_on:
      - db
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    environment:
      GF_LOG_LEVEL: "error"
    volumes:
      - "./grafana/dashboards/:/etc/dashboards/"
    networks:
      - default
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile.dev
    image: ticketing-system-proxy
    ports:
      - 8080:80
    depends_on:
      - ui
      - api
      - pgadmin
      - grafana
    labels:
      app: "ticketing-system"
      description: "Jira clone"
    networks:
      - default
networks:
  default:
volumes:
  postgres_data:
  pgadmin_data:
